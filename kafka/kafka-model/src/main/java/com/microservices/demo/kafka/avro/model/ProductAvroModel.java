/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.microservices.demo.kafka.avro.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ProductAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5162484901933854631L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ProductAvroModel\",\"namespace\":\"com.microservices.demo.kafka.avro.model\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"pName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pCategory\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quantity\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"quality\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"company\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pOrigin\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ProductAvroModel> ENCODER =
      new BinaryMessageEncoder<ProductAvroModel>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ProductAvroModel> DECODER =
      new BinaryMessageDecoder<ProductAvroModel>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ProductAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ProductAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ProductAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ProductAvroModel>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ProductAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ProductAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ProductAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ProductAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private int id;
   private java.lang.String pName;
   private java.lang.String pCategory;
   private java.lang.String quantity;
   private java.lang.String quality;
   private java.lang.String company;
   private java.lang.String pOrigin;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ProductAvroModel() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param pName The new value for pName
   * @param pCategory The new value for pCategory
   * @param quantity The new value for quantity
   * @param quality The new value for quality
   * @param company The new value for company
   * @param pOrigin The new value for pOrigin
   */
  public ProductAvroModel(java.lang.Integer id, java.lang.String pName, java.lang.String pCategory, java.lang.String quantity, java.lang.String quality, java.lang.String company, java.lang.String pOrigin) {
    this.id = id;
    this.pName = pName;
    this.pCategory = pCategory;
    this.quantity = quantity;
    this.quality = quality;
    this.company = company;
    this.pOrigin = pOrigin;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return pName;
    case 2: return pCategory;
    case 3: return quantity;
    case 4: return quality;
    case 5: return company;
    case 6: return pOrigin;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: pName = value$ != null ? value$.toString() : null; break;
    case 2: pCategory = value$ != null ? value$.toString() : null; break;
    case 3: quantity = value$ != null ? value$.toString() : null; break;
    case 4: quality = value$ != null ? value$.toString() : null; break;
    case 5: company = value$ != null ? value$.toString() : null; break;
    case 6: pOrigin = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public int getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(int value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'pName' field.
   * @return The value of the 'pName' field.
   */
  public java.lang.String getPName() {
    return pName;
  }


  /**
   * Sets the value of the 'pName' field.
   * @param value the value to set.
   */
  public void setPName(java.lang.String value) {
    this.pName = value;
  }

  /**
   * Gets the value of the 'pCategory' field.
   * @return The value of the 'pCategory' field.
   */
  public java.lang.String getPCategory() {
    return pCategory;
  }


  /**
   * Sets the value of the 'pCategory' field.
   * @param value the value to set.
   */
  public void setPCategory(java.lang.String value) {
    this.pCategory = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public java.lang.String getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.String value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'quality' field.
   * @return The value of the 'quality' field.
   */
  public java.lang.String getQuality() {
    return quality;
  }


  /**
   * Sets the value of the 'quality' field.
   * @param value the value to set.
   */
  public void setQuality(java.lang.String value) {
    this.quality = value;
  }

  /**
   * Gets the value of the 'company' field.
   * @return The value of the 'company' field.
   */
  public java.lang.String getCompany() {
    return company;
  }


  /**
   * Sets the value of the 'company' field.
   * @param value the value to set.
   */
  public void setCompany(java.lang.String value) {
    this.company = value;
  }

  /**
   * Gets the value of the 'pOrigin' field.
   * @return The value of the 'pOrigin' field.
   */
  public java.lang.String getPOrigin() {
    return pOrigin;
  }


  /**
   * Sets the value of the 'pOrigin' field.
   * @param value the value to set.
   */
  public void setPOrigin(java.lang.String value) {
    this.pOrigin = value;
  }

  /**
   * Creates a new ProductAvroModel RecordBuilder.
   * @return A new ProductAvroModel RecordBuilder
   */
  public static com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder newBuilder() {
    return new com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder();
  }

  /**
   * Creates a new ProductAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ProductAvroModel RecordBuilder
   */
  public static com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder newBuilder(com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder other) {
    if (other == null) {
      return new com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder();
    } else {
      return new com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ProductAvroModel RecordBuilder by copying an existing ProductAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ProductAvroModel RecordBuilder
   */
  public static com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder newBuilder(com.microservices.demo.kafka.avro.model.ProductAvroModel other) {
    if (other == null) {
      return new com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder();
    } else {
      return new com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ProductAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ProductAvroModel>
    implements org.apache.avro.data.RecordBuilder<ProductAvroModel> {

    private int id;
    private java.lang.String pName;
    private java.lang.String pCategory;
    private java.lang.String quantity;
    private java.lang.String quality;
    private java.lang.String company;
    private java.lang.String pOrigin;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.pName)) {
        this.pName = data().deepCopy(fields()[1].schema(), other.pName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.pCategory)) {
        this.pCategory = data().deepCopy(fields()[2].schema(), other.pCategory);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.quantity)) {
        this.quantity = data().deepCopy(fields()[3].schema(), other.quantity);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.quality)) {
        this.quality = data().deepCopy(fields()[4].schema(), other.quality);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.company)) {
        this.company = data().deepCopy(fields()[5].schema(), other.company);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.pOrigin)) {
        this.pOrigin = data().deepCopy(fields()[6].schema(), other.pOrigin);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing ProductAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(com.microservices.demo.kafka.avro.model.ProductAvroModel other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.pName)) {
        this.pName = data().deepCopy(fields()[1].schema(), other.pName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.pCategory)) {
        this.pCategory = data().deepCopy(fields()[2].schema(), other.pCategory);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.quantity)) {
        this.quantity = data().deepCopy(fields()[3].schema(), other.quantity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.quality)) {
        this.quality = data().deepCopy(fields()[4].schema(), other.quality);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.company)) {
        this.company = data().deepCopy(fields()[5].schema(), other.company);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.pOrigin)) {
        this.pOrigin = data().deepCopy(fields()[6].schema(), other.pOrigin);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public int getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'pName' field.
      * @return The value.
      */
    public java.lang.String getPName() {
      return pName;
    }


    /**
      * Sets the value of the 'pName' field.
      * @param value The value of 'pName'.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder setPName(java.lang.String value) {
      validate(fields()[1], value);
      this.pName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'pName' field has been set.
      * @return True if the 'pName' field has been set, false otherwise.
      */
    public boolean hasPName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'pName' field.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder clearPName() {
      pName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'pCategory' field.
      * @return The value.
      */
    public java.lang.String getPCategory() {
      return pCategory;
    }


    /**
      * Sets the value of the 'pCategory' field.
      * @param value The value of 'pCategory'.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder setPCategory(java.lang.String value) {
      validate(fields()[2], value);
      this.pCategory = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'pCategory' field has been set.
      * @return True if the 'pCategory' field has been set, false otherwise.
      */
    public boolean hasPCategory() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'pCategory' field.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder clearPCategory() {
      pCategory = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public java.lang.String getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder setQuantity(java.lang.String value) {
      validate(fields()[3], value);
      this.quantity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder clearQuantity() {
      quantity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'quality' field.
      * @return The value.
      */
    public java.lang.String getQuality() {
      return quality;
    }


    /**
      * Sets the value of the 'quality' field.
      * @param value The value of 'quality'.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder setQuality(java.lang.String value) {
      validate(fields()[4], value);
      this.quality = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'quality' field has been set.
      * @return True if the 'quality' field has been set, false otherwise.
      */
    public boolean hasQuality() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'quality' field.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder clearQuality() {
      quality = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'company' field.
      * @return The value.
      */
    public java.lang.String getCompany() {
      return company;
    }


    /**
      * Sets the value of the 'company' field.
      * @param value The value of 'company'.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder setCompany(java.lang.String value) {
      validate(fields()[5], value);
      this.company = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'company' field has been set.
      * @return True if the 'company' field has been set, false otherwise.
      */
    public boolean hasCompany() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'company' field.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder clearCompany() {
      company = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'pOrigin' field.
      * @return The value.
      */
    public java.lang.String getPOrigin() {
      return pOrigin;
    }


    /**
      * Sets the value of the 'pOrigin' field.
      * @param value The value of 'pOrigin'.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder setPOrigin(java.lang.String value) {
      validate(fields()[6], value);
      this.pOrigin = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'pOrigin' field has been set.
      * @return True if the 'pOrigin' field has been set, false otherwise.
      */
    public boolean hasPOrigin() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'pOrigin' field.
      * @return This builder.
      */
    public com.microservices.demo.kafka.avro.model.ProductAvroModel.Builder clearPOrigin() {
      pOrigin = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ProductAvroModel build() {
      try {
        ProductAvroModel record = new ProductAvroModel();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.pName = fieldSetFlags()[1] ? this.pName : (java.lang.String) defaultValue(fields()[1]);
        record.pCategory = fieldSetFlags()[2] ? this.pCategory : (java.lang.String) defaultValue(fields()[2]);
        record.quantity = fieldSetFlags()[3] ? this.quantity : (java.lang.String) defaultValue(fields()[3]);
        record.quality = fieldSetFlags()[4] ? this.quality : (java.lang.String) defaultValue(fields()[4]);
        record.company = fieldSetFlags()[5] ? this.company : (java.lang.String) defaultValue(fields()[5]);
        record.pOrigin = fieldSetFlags()[6] ? this.pOrigin : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ProductAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ProductAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ProductAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ProductAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.id);

    out.writeString(this.pName);

    out.writeString(this.pCategory);

    out.writeString(this.quantity);

    out.writeString(this.quality);

    out.writeString(this.company);

    out.writeString(this.pOrigin);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.id = in.readInt();

      this.pName = in.readString();

      this.pCategory = in.readString();

      this.quantity = in.readString();

      this.quality = in.readString();

      this.company = in.readString();

      this.pOrigin = in.readString();

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.id = in.readInt();
          break;

        case 1:
          this.pName = in.readString();
          break;

        case 2:
          this.pCategory = in.readString();
          break;

        case 3:
          this.quantity = in.readString();
          break;

        case 4:
          this.quality = in.readString();
          break;

        case 5:
          this.company = in.readString();
          break;

        case 6:
          this.pOrigin = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










